//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Hello.java
//

#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "Hello.h"

@implementation TestHello

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  TestHello_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mark {
  TestHello_mark();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mark);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _TestHello = { "Hello", "test", NULL, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_TestHello;
}

@end

void TestHello_init(TestHello *self) {
  NSObject_init(self);
}

TestHello *new_TestHello_init() {
  J2OBJC_NEW_IMPL(TestHello, init)
}

TestHello *create_TestHello_init() {
  J2OBJC_CREATE_IMPL(TestHello, init)
}

void TestHello_mark() {
  TestHello_initialize();
  id<JavaUtilMap> myMap = create_JavaUtilHashMap_init();
  [myMap putWithId:@"1" withId:@"Hello World demo of Java 2 Objective C."];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[myMap getWithId:@"1"]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(TestHello)
